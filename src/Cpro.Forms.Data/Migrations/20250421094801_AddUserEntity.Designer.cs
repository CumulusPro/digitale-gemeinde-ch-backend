// <auto-generated />
using System;
using Cpro.Forms.Data.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cpro.Forms.Data.Migrations
{
    [DbContext(typeof(SqlContext))]
    [Migration("20250421094801_AddUserEntity")]
    partial class AddUserEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cpro.Forms.Data.Models.Designer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DesignerId")
                        .HasColumnType("int");

                    b.Property<string>("FormId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.ToTable("Designer");
                });

            modelBuilder.Entity("Cpro.Forms.Data.Models.DesignerHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DesignerId")
                        .HasColumnType("int");

                    b.Property<string>("FormId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("FormVersion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.ToTable("DesignerHistory");
                });

            modelBuilder.Entity("Cpro.Forms.Data.Models.FormData", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DocumentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubmittedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("TenantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("FormDatas");
                });

            modelBuilder.Entity("Cpro.Forms.Data.Models.FormDesign", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("TenantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("FormDesigns");
                });

            modelBuilder.Entity("Cpro.Forms.Data.Models.FormDesignHistory", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("TenantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("FormDesignsHistory");
                });

            modelBuilder.Entity("Cpro.Forms.Data.Models.FormStatesConfig", b =>
                {
                    b.Property<int>("FormStatesConfigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FormStatesConfigId"));

                    b.Property<string>("FormDesignId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FormStatesConfigId");

                    b.HasIndex("FormDesignId");

                    b.ToTable("FormStatesConfig");
                });

            modelBuilder.Entity("Cpro.Forms.Data.Models.FormStatesConfigHistory", b =>
                {
                    b.Property<int>("FormStatesConfigHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FormStatesConfigHistoryId"));

                    b.Property<string>("FormDesignId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("FormVersion")
                        .HasColumnType("int");

                    b.Property<string>("label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FormStatesConfigHistoryId");

                    b.HasIndex("FormDesignId");

                    b.ToTable("FormStatesConfigHistory");
                });

            modelBuilder.Entity("Cpro.Forms.Data.Models.FormTemplate", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("TenantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("FormTemplates");
                });

            modelBuilder.Entity("Cpro.Forms.Data.Models.Processor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FormId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProcessorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.ToTable("Processor");
                });

            modelBuilder.Entity("Cpro.Forms.Data.Models.ProcessorHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FormId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("FormVersion")
                        .HasColumnType("int");

                    b.Property<int>("ProcessorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.ToTable("ProcessorHistory");
                });

            modelBuilder.Entity("Cpro.Forms.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Cpro.Forms.Data.Models.Designer", b =>
                {
                    b.HasOne("Cpro.Forms.Data.Models.FormDesign", null)
                        .WithMany("designers")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cpro.Forms.Data.Models.DesignerHistory", b =>
                {
                    b.HasOne("Cpro.Forms.Data.Models.FormDesignHistory", null)
                        .WithMany("designers")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cpro.Forms.Data.Models.FormStatesConfig", b =>
                {
                    b.HasOne("Cpro.Forms.Data.Models.FormDesign", null)
                        .WithMany("FormStates")
                        .HasForeignKey("FormDesignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cpro.Forms.Data.Models.FormStatesConfigHistory", b =>
                {
                    b.HasOne("Cpro.Forms.Data.Models.FormDesignHistory", null)
                        .WithMany("FormStates")
                        .HasForeignKey("FormDesignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cpro.Forms.Data.Models.Processor", b =>
                {
                    b.HasOne("Cpro.Forms.Data.Models.FormDesign", null)
                        .WithMany("processors")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cpro.Forms.Data.Models.ProcessorHistory", b =>
                {
                    b.HasOne("Cpro.Forms.Data.Models.FormDesignHistory", null)
                        .WithMany("processors")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cpro.Forms.Data.Models.FormDesign", b =>
                {
                    b.Navigation("FormStates");

                    b.Navigation("designers");

                    b.Navigation("processors");
                });

            modelBuilder.Entity("Cpro.Forms.Data.Models.FormDesignHistory", b =>
                {
                    b.Navigation("FormStates");

                    b.Navigation("designers");

                    b.Navigation("processors");
                });
#pragma warning restore 612, 618
        }
    }
}
